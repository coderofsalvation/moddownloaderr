#!/bin/bash
###############################################################################
# 			 MODARCHIVE.ORG DOWNLOADERR
#
#  This script will download mods from modarchive.org to a directory of your
#  choice. Type -h for help and options. Download by genre, or other search
#  criteria.
#
#  You will be prompted where you would like to save the mods when you run
#  the script. If you leave the prompt empty, it will use pwd as path.
#
#  If you are using mac os x you need to run this command before this will work
#  function _wget() { curl "${1}" -o $(basename "${1}") ; }; alias wget='_wget'
#
#  Derrived from MODARCHIVE JUKEBOX by Fernando Sancho AKA 'toptnc'
#  Modifications by Demonic Sweaters www.demonicsweaters.com
#  Edits by Milk - https://github.com/mxmilkb/moddownloader
#
#  This script is released under the terms of the GNU LGPL v3.0 license
#
###############################################################################

# Configuration file overrides defaults
if [ -f $HOME/.config/modarchive/modarchiverc ]; then
  source $HOME/.config/modarchive/modarchiverc
fi

usage()
{
  cat << EOF
usage: $0 [options]

Mod Downloaderr options:
  -h               Show this help message
  -n <number>      Number of tracks to download
  -s <section>     Download from selected section: Can be one of this
       uploads     This is a list of the recent member upload activity

       featured    These modules have been nominated by the crew for either
                     outstanding quality, technique or creativity
                     (or combination of).

       favourites  These modules have been nominated by the members via their
                     favourites.

       downloads   The top 1000 most downloaded modules, recorded since circa
                     2002.

       topscore    This chart lists the most revered modules on the archive.

       new         Same than uploads but using search engine

       random      Ramdom module from entire archive

   -a <artist>     Search in artist database
   -m <module>     Search in module database (Title and Filename)
   -g [<genrenum>] Download a specific genre. Either enter the modarchive.org
                     genres number, or select from a list.

Hint: Use + symbol instead blankspaces in search strings.

Hint 2: If you're running Mac OSX, you must first run this command before the
script will run:
  function _wget() { curl "${1}" -o $(basename "${1}") ; }; alias wget='_wget'

Hint 3: Use 'MDDEBUG=1 path/moddownloaderr' to enable debug output.

EOF
}

echo_genres()
{
  cat << EOF
  Numbers for each genre:

    Alternative                        Jazz, Blues
      Alternative - 48                   Big Band - 74
      Gothic - 38                        Blues - 19
      Grunge - 103                       Jazz - Acid - 30
      Metal - Extreme - 37               Jazz - Modern - 31
      Metal - 36                         Jazz - 29
      Punk - 35                          Swing - 75

    Demo, Tracking Scene               Other
      Chiptune - 54                      Bluegrass - 105
      Demo Style - 55                    Classical - 20
      One Hour Compo - 53                Comedy - 45
                                         Country - 18
    Electronica                          Experimental - 46
      Chillout - 106                     Fantasy - 52
      Electronic - 1                     Folk - 21
      Electronic - Ambient - 2           Fusion - 102
      Electronic - Breakbeat - 9         Medieval - 28
      Electronic - Dance - 3             New Age - 44
      Electronic - Drum & Bass - 6       Orchestral - 50
      Electronic - Gabber - 40           Other - 41
      Electronic - Hardcore - 39         Piano - 59
      Electronic - House - 10            Religious - 49
      Electronic - IDM - 99              Soundtrack - 43
      Electronic - Industrial - 34       Spiritual - 47
      Electronic - Jungle - 60           Video Game - 8
      Electronic - Minimal - 101         Vocal Montage - 76
      Electronic - Other - 100           World - 42
      Electronic - Progressive - 11
      Electronic - Rave - 65           Pop, Rock
      Electronic - Techno - 7            Ballad - 56
      Trance - 71                        Disco - 58
      Trance - Acid - 63                 Easy Listening - 107
      Trance - Dream - 67                Funk - 32
      Trance - Goa - 66                  Pop - Soft - 62
      Trance - Hard - 64                 Pop - Synth - 61
      Trance - Progressive - 85          Pop - 12
      Trance - Tribal - 70               Rock - Hard - 14
                                         Rock - Soft - 15
    Urban, Hip-Hop                       Rock - 13
      Hip-Hop - 22
      R & B - 26                       Seasonal
      Reggae - 27                        Christmas - 72
      Ska - 24                           Halloween - 82
      Soul - 25

EOF
}

create_playlist()
{
  PLAYLIST=""
  PLAYLISTFILE=/tmp/modarchive/modarchive.url

  if [ -z $PAGES ]; then
    PLAYLIST=$(wget -o /dev/null -O - "${MODURL}" | grep href | sed 's/href=/\n/g' | sed 's/>/\n/g' | grep downloads.php | sed 's/\"//g' | sed 's/'\''//g'|cut -d " " -f 1| uniq)
  else
    echo "Need to download ${PAGES} pages of results. This may take a while..."
    for (( PLPAGE = 1; PLPAGE <= PAGES; PLPAGE ++ ))
    do
      (( PERCENT = PLPAGE * 100 / PAGES ))
      echo -ne "${PERCENT}% completed\r"
      PLPAGEARG="&page=$PLPAGE";
      LIST=$(wget -o /dev/null -O - "${MODURL}${PLPAGEARG}"| grep href | sed 's/href=/\n/g' | sed 's/>/\n/g' | grep downloads.php | sed 's/\"//g' | sed 's/'\''//g'|cut -d " " -f 1| uniq )
      PLAYLIST=$(printf "${PLAYLIST}\n${LIST}")
    done
    echo ""
  fi
  [ ! -d /tmp/modarchive ] && mkdir /tmp/modarchive;
  if [ -z $SHUFFLE]; then
    echo "$PLAYLIST" | sed '/^$/d' > $PLAYLISTFILE
  else
    echo "$PLAYLIST" | sed '/^$/d' | awk 'BEGIN { srand() } { print rand() "\t" $0 }' | sort -n | cut -f2- > $PLAYLISTFILE
  fi
}

pages_parse()
{
  PAGES=$(wget  -o /dev/null -O - $MODURL | sed 's/[<>]/\n/g' | grep "page=" | tail -n 1 | sed 's/page=/\n/' | tail -n 1 | cut -d "#" -f 1)
}

set_modpath()
{
  echo "Where do you want to save the mods?"
  echo "[enter full path, or leave blank for pwd, which is;"
  echo " `pwd`]"
  echo -n ": "
  read MODPATH
  if [ -z $MODPATH ]; then MODPATH="."; fi
}


[ $MDDEBUG ] && echo DEBUG OPTION: $OPTION
[ $MDDEBUG ] && echo DEBUG OPTARG: $OPTARG

echo ModArchive Downloaderr
echo

while getopts "hrm:a:s:p:gd" OPTION
do
  case $OPTION in
    h)
      usage
      exit 0;
      ;;

    s)
      case $OPTARG in
        uploads)
          PAGES=
          ;;
        featured)
          set_modpath
          pages_parse
          ;;
        favourites)
          set_modpath
          MODURL="http://modarchive.org/index.php?request=view_top_favourites"
          pages_parse
          ;;
        downloads)
          set_modpath
          MODURL="http://modarchive.org/index.php?request=view_chart&query=tophits"
          pages_parse
          ;;
        topscore)
          set_modpath
          MODURL="http://modarchive.org/index.php?request=view_chart&query=topscore"
          pages_parse
          ;;
        new)
          set_modpath
          MODURL="http://modarchive.org/index.php?request=search&search_type=new_additions"
          pages_parse
          ;;

        random)
          set_modpath
          RANDOMSONG="true"
          MODURL="http://modarchive.org/index.php?request=view_random"
          PAGES=
          ;;
        ?)
          usage
          exit 1
          ;;
      esac
      ;;

    a)
      set_modpath
      MODURL="http://modarchive.org/index.php?query=${OPTARG}&submit=Find&request=search&search_type=guessed_artist&order=5"
      pages_parse
      ;;

    m)
      set_modpath
      MODURL="http://modarchive.org/index.php?request=search&query=${OPTARG}&submit=Find&search_type=filename_or_songtitle"
      pages_parse
      ;;

    g)
      echo_genres
      echo -n "What genre do you wish to download? (enter number from above): "
      read GENRENUM
      set_modpath
      MODURL="http://modarchive.org/index.php?query=${GENRENUM}&request=search&search_type=genre"
      pages_parse
      ;;

    d)
      MDDEBUG=true
      echo DEBUG *
      ;;

    ?)
      usage
      exit 1
      ;;
  esac
done

if [ -z $MODURL ]; then
  usage
  exit 1
fi

echo
echo "Starting Download Process"
LOOP="true"
if [ -z $RANDOMSONG ]; then
  echo "- Creating playlist"
  create_playlist
  [ $MDDEBUG ] && echo DEBUG playlist file: $PLAYLISTFILE
  TRACKSFOUND=$(wc -l ${PLAYLISTFILE} | cut -d " " -f 1)
  echo "- Your query returned ${TRACKSFOUND} results"
  echo
fi

COUNTER=1
[ $MDDEBUG ] && echo DEBUG modpath: $MODPATH
while [ $LOOP = "true" ]; do
  if [ -z $RANDOMSONG ]; then
    SONGURL=$(cat ${PLAYLISTFILE} | head -n ${COUNTER} | tail -n 1)
    [ $MDDEBUG ] && echo DEBUG
    [ $MDDEBUG ] && echo DEBUG song url: $SONGURL
    [ $MDDEBUG ] && echo DEBUG
    echo -n $COUNTER
    let COUNTER=$COUNTER+1
    [ $TRACKSFOUND -gt 0 ] && [ $COUNTER -gt $TRACKSFOUND ] && LOOP="false"
  else
    SONGURL=$(wget -o /dev/null -O - "$MODURL" | sed 's/href=\"/href=\"\n/g' | sed 's/\">/\n\">/g' | grep downloads.php | head -n 1);
    [ $MDDEBUG ] && echo DEBUG song url: $SONGURL
    echo -n $COUNTER
    let COUNTER=$COUNTER+1
    [ $TRACKSFOUND -gt 0 ] && [ $COUNTER -gt $TRACKSFOUND ] && LOOP="false"
  fi

  MODFILE=$(echo "$SONGURL" | cut -d "#" -f 2)
  if [ ! -e "${MODPATH}/${MODFILE}" ]; then
    echo "/$TRACKSFOUND Downloading $SONGURL to $MODPATH/$MODFILE";
    wget -o /dev/null -O "${MODPATH}/${MODFILE}" "$SONGURL";
  elif [ -e "${MODPATH}/${MODFILE}" ]; then
    echo "$TRACKSFOUND * Already exists - '${MODPATH}/${MODFILE}'"
  fi
done
